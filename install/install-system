#!/bin/bash

function system_prepare_base
{
    debootstrap --variant minbase --arch amd64 stable "$mountpoint"
}

function system_prepare_mountpoint
{
    utility_mount "proc"     "/proc"
    utility_mount "devtmpfs" "/dev"
    utility_mount "devpts"   "/dev/pts"
    utility_mount "sysfs"    "/sys"
    utility_mount "efivarfs" "/sys/firmware/efi/efivars"
    utility_mount "tmpfs"    "/tmp"
    utility_mount "tmpfs"    "/run"
    utility_bind             "/run/dbus"
}

function system_prepare_repository
{
	cat <<- EOF > "/etc/apt/sources.list"
		deb http://deb.debian.org/debian stable main contrib non-free non-free-firmware
	EOF
}

function system_prepare_packages
{
    apt-get update
    apt-get install --yes --no-install-recommends \
        "dbus"                                    \
        "file"                                    \
        "firmware-amd-graphics"                   \
        "firmware-iwlwifi"                        \
        "firmware-realtek"                        \
        "fontconfig"                              \
        "fonts-dejavu-core"                       \
        "libasound2"                              \
        "libegl1"                                 \
        "libgl1"                                  \
        "linux-image-amd64"                       \
        "locales"                                 \
        "polkitd"                                 \
        "sudo"                                    \
        "systemd"                                 \
        "systemd-boot"                            \
        "systemd-sysv"                            \
        "xkb-data"

    dpkg-reconfigure --frontend teletype \
        "fontconfig-config"              \
        "locales"                        \
        "tzdata"

    apt-get clean
}

function system_prepare_bootloader
{
    bootctl install

	cat <<- EOF > "/boot/loader/entries/debian.conf"
		title  Debian Stable
		linux  /$(cd /boot && ls vmlinuz*)
		initrd /$(cd /boot && ls initrd*)
		options quiet root=UUID=$(device_prepare_uuid "${device}p2") rw
	EOF

    echo "default debian" > "/boot/loader/loader.conf"
}

function system_prepare_device
{
	cat <<- EOF > "/etc/fstab"
		UUID=$(device_prepare_uuid "${device}p1") /boot vfat defaults    0 2
		UUID=$(device_prepare_uuid "${device}p2") /     ext4 defaults,ro 0 1
		UUID=$(device_prepare_uuid "${device}p3") /var  ext4 defaults    0 2
		UUID=$(device_prepare_uuid "${device}p4") /home ext4 defaults    0 2
	EOF
}

function system_prepare_hostname
{
	cat <<- EOF > "/etc/hosts"
		127.0.0.1 $hostname
		127.0.0.1 localhost
	EOF

    echo "$hostname" > "/etc/hostname"
}

function system_prepare_interface
{
	cat <<- EOF > "/etc/systemd/network/$interface.network"
		[Match]
		Name=$interface
		[Network]
		DHCP=ipv4
	EOF

    systemctl enable systemd-networkd
}

function system_prepare_module
{
	cat <<- EOF > "/etc/udev/rules.d/i2c-dev.rules"
		SUBSYSTEM == "i2c-dev", MODE = "0666"
	EOF

    echo "i2c-dev" > "/etc/modules-load.d/i2c-dev.conf"
}

function system_prepare_root
{
    echo -e "root\nroot" | passwd root
}

function system_prepare_sound
{
    echo "blacklist snd-hda-intel" > "/etc/modprobe.d/alsa-base.conf"
}

function system_prepare_username
{
    useradd "$username" --shell "/bin/bash" --create-home
    usermod "$username" --groups sudo,audio,video,input --append

    echo -e "$password\n$password" | passwd "$username"
}

function system_prepare_workaround
{
    ln --symbolic "/home/$username/.local/opt/xwayland/xwayland" "/usr/bin/Xwayland"
    ln --symbolic "/home/$username/.local/opt/xwayland/xwayland" "/usr/bin/xkbcomp"
}
